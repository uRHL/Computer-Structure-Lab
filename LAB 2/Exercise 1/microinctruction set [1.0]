# esto es LD o ID?
#los bits sin usar no hace falta declararlos?
#NOT UPDATE SR

begin
{
    fetch:          (T2, C0),
                    (TA, R, BW=11, M1=1, C1=1),
                    (M2, C2, T1, C3),
                    (A0, B=0, C=0)
}
#####################################################################
#													Instructions												   	  #
#####################################################################

#NOT UPDATE SR
ld reg1 reg2 {
	co=010000,
	nwords=1,
	reg1 = reg(25,21),
	reg2 = reg(20,16),
	{
    (SELC=10101, SELA=10000, MR=0, LC=1, T9=1)
		(A0=1, B=1, C=0)
	}
}

#NOT UPDATE SR
ldi reg unsigVal {
	co=010010,
  nwords=1,
	reg = reg(25,21),
	unsigVal = inm(15,0),
	{
		(SELC=10101, MR=0, SE=0, SIZE=10000, OFFSET=00000, T3, C, LC)
	 	(A0=1, B=1, C=0)
	}
}

#NOT UPDATE SR
ld reg1 (reg2){
	co=010011,
	nwords=1,
	reg1 = reg(25,21),
	reg2 = reg(20,16),
	{
		(SELA=10000, MR=0, T9=1, C0=1)
    (TA=1, R=1, BW=11, M1=1, C1=1)
  	(SELC=10101, MR=0, T1=1, LC=1)
    (A0=1, B=1, C=0)
	}
}

#UPDATE SR
add_a reg{
	co=011000,
	nwords=1,
	reg=reg(25,21),
	{
		(SELA=10101, MR=0, T9, C4)
    (SELB=00100, MR=1, MA=1, MB=00, SELCOP=01010, MC=1, SELP=11, M7=1, C7=1, T6, SELC=00100, MR=1, LC=1)
    (A0=1, B=1, C=0)
	}
}

#Signed value
#UPDATE SR
addi_a sigVal {
	co=011010,
  nwords=1,
	sigVal = inm(15,0),
	{
		(SE=1, SIZE=10000, OFFSET=00000, T3, C5)
    (SELA=00100, MR=1, MA=0, MB=01, SELCOP=01010, MC=1, SELP=11, M7, C7, T6, SelC=00100, MR=1, LC=1)
    (A0=1, B=1, C=0)
	}
}

#UPDATE SR
inc reg{
	co=011100,
  nwords=1,
	reg = reg(25,21),
	{
		(SelA=10101, MR=0, MA=0, MB=11, SELCOP=01010, MC=1, T6, SelP=11, M7=1, C7, SelC=10101, MR=0, LC)
    (A0=1, B=1, C=0)
	}
}

#UPDATE SR
dec reg{
	co=011101,
  nwords=1,
	reg = reg(25,21),
	{
		(SelA=10101, MR=0, MA=0, MB=11, SELCOP=01011, MC=1, T6, SelP=11, M7=1, C7, SelC=10101, MR=0, LC)
    (A0=1, B=1, C=0)
	}
}

#NOT UPDATE SR
jp sigVal{
	co=110000,
  nwords=1,
	sigVal = inm(15,0),
	{
		(SE=1, Size=10000, Offset=00000, T3, C5)
    (T2, C4)
  	(MA=1, MB=01, SELCOP=01010, MC=1, T6, M2=0, C2)
    (A0=1, B=1, C=0)
	}
}


#NOT UPDATE SR
jpz sigVal{
	co=110011,
  nwords=1,
	sigVal = inm(15,0),
	{
    (T2, C5)
    (SE=1, Offset=00000, Size=10000, T3, C4, MADDR=fetch, B=0, A0=0, C=110)
  	(MA=1, MB=01, SelCop=1010, MC=1, C6)
  	(MA=1, MB=11, SelCop=1100, MC=1, SelP=11, M7=1, C7, T8, C4)
  	(MADDR=fetch, B=0, A0=0, C=110)
  	(T7, M2=0, C2, MA=1, MB=11, SelCop=1100, MC=1, SelP=11, M7=1, C7)
    (A0=1, B=1, C=0)
	}
}

#NOT UPDATE SR
call unsigVal{
	co=100001,
  nwords=1,
	unsigVal = inm(15,0),
	{		
    (SelA=11101 MR=1, MA=0, MB=10, SelCop=1011, MC=1, T6, C0, SelC=11101, LC)    
  	(T2, M1=0, C1)  	
  	(Ta, BW=11, Td, W, SE=0, Size=10000, Offset=0, T3, M2=0,C2, SE=0, Size=10000, Offset=00000, T3)
    (A0=1, B=1, C=0)
	}
}

#NOT UPDATE SR
Ret {
	co=100010,
  nwords=1,
	{
		(SelA=11101, MR=1, T9, C0, MA=0, MB=10, SelCop=1010, MC=1, C6)
    (Ta, R, BW=11, M1=1, C1, T7, SelC=11101, MR=1, LC)
  	(T1, M2=0, C2)
    (A0=1, B=1, C=0)
	}
}

#NOT UPDATE SR
Halt {
	co=100011,
  nwords=1,
	{
		(MA=0, MB=00, SelCop=1010, MC=1, T6, M2=0, C2)
    (A0=1, B=1, C=0)
	}
}

#NOT UPDATE SR
push reg {
	co=100100,
  nwords=1,
	reg = reg(25,21),
	{
		(SelA=11101, MR=1, MA=0, MB=10, SelCop=1011, MC=1, T6, SelC=11101, MR=1, LC, C0)
  	(SelA=10101, MB=0, T9, M1=0, C1)
  	(Ta, BW=11, Td, W)  
    (A0=1, B=1, C=0)
	}
}

#NOT UPDATE SR
pop reg {
	co=100101,
  nwords=1,
	reg = reg(25,21),
	{
		(SelA=11101, MR=1, T9, C0, MA=0, MB=10, SelCop=1010, MC, C6)
    (Ta, R, BW=11, M1=1, C1, MR=1,SelC=11101, MR=1, T7, LC)
  	(SelC=10101, MR=0, T1, LC)
    (A0=1, B=1, C=0)
	}
}

#####################################################################
# 										 Register section                             #
#####################################################################
#IX=$a0
#IY=$a1
#29=SP
#Flag= bit Z of SR
#HL=$v0 to return values
#
registers
{
	4 = A,
	5 = BC,
	6 = DE,
	7 = HL,
	8 = IX,
	9 = IY,
  29 = SP (stack_pointer)
}