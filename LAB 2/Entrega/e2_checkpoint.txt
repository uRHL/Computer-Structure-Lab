{
  "metadata": {
    "kernelspec": {
      "name": "node_nteract",
      "language": "javascript",
      "display_name": "Node.js (nteract)"
    },
    "kernel_info": {
      "name": "node_nteract"
    },
    "language_info": {
      "name": "javascript",
      "version": "8.2.1",
      "mimetype": "application/javascript",
      "file_extension": ".js"
    },
    "title": "WepSIM 2.0.11",
    "nteract": {
      "version": "nteract-on-jupyter@2.0.0"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0,
  "cells": [
    {
      "cell_type": "markdown",
      "source": "## mode",
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": "ep",
      "outputs": [],
      "execution_count": 1,
      "metadata": {
        "name": "mode",
        "type": "string",
        "collapsed": false,
        "deletable": false,
        "editable": false
      }
    },
    {
      "cell_type": "markdown",
      "source": "## firmware",
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": "# esto es LD o ID?\n#los bits sin usar no hace falta declararlos?\n#NOT UPDATE SR\n\nbegin\n{\n    fetch:          (T2, C0),\n                    (TA, R, BW=11, M1=1, C1=1),\n                    (M2, C2, T1, C3),\n                    (A0, B=0, C=0)\n}\n#####################################################################\n#\t\t\t\t\t\t\t\t\t\t\t\t\tInstructions\t\t\t\t\t\t\t\t\t\t\t\t   \t  #\n#####################################################################\n\n#NOT UPDATE SR\nld reg1 reg2 {\n\tco=010000,\n\tnwords=1,\n\treg1 = reg(25,21),\n\treg2 = reg(20,16),\n\t{\n    (SELC=10101, SELA=10000, MR=0, LC=1, T9=1)\n\t\t(A0=1, B=1, C=0)\n\t}\n}\n\n#NOT UPDATE SR\nldi reg unsigVal {\n\tco=010010,\n  nwords=1,\n\treg = reg(25,21),\n\tunsigVal = inm(15,0),\n\t{\n\t\t(SELC=10101, MR=0, SE=0, SIZE=10000, OFFSET=00000, T3, C, LC)\n\t \t(A0=1, B=1, C=0)\n\t}\n}\n\n#NOT UPDATE SR\nld reg1 (reg2){\n\tco=010011,\n\tnwords=1,\n\treg1 = reg(25,21),\n\treg2 = reg(20,16),\n\t{\n\t\t(SELA=10000, MR=0, T9=1, C0=1)\n    (TA=1, R=1, BW=11, M1=1, C1=1)\n  \t(SELC=10101, MR=0, T1=1, LC=1)\n    (A0=1, B=1, C=0)\n\t}\n}\n\n#UPDATE SR\nadd_a reg{\n\tco=011000,\n\tnwords=1,\n\treg=reg(25,21),\n\t{\n\t\t(SELA=10101, MR=0, T9, C4)\n    (SELB=00100, MR=1, MA=1, MB=00, SELCOP=01010, MC=1, SELP=11, M7=1, C7=1, T6, SELC=00100, MR=1, LC=1)\n    (A0=1, B=1, C=0)\n\t}\n}\n\n#Signed value\n#UPDATE SR\naddi_a sigVal {\n\tco=011010,\n  nwords=1,\n\tsigVal = inm(15,0),\n\t{\n\t\t(SE=1, SIZE=10000, OFFSET=00000, T3, C5)\n    (SELA=00100, MR=1, MA=0, MB=01, SELCOP=01010, MC=1, SELP=11, M7, C7, T6, SelC=00100, MR=1, LC=1)\n    (A0=1, B=1, C=0)\n\t}\n}\n\n#UPDATE SR\ninc reg{\n\tco=011100,\n  nwords=1,\n\treg = reg(25,21),\n\t{\n\t\t(SelA=10101, MR=0, MA=0, MB=11, SELCOP=01010, MC=1, T6, SelP=11, M7=1, C7, SelC=10101, MR=0, LC)\n    (A0=1, B=1, C=0)\n\t}\n}\n\n#UPDATE SR\ndec reg{\n\tco=011101,\n  nwords=1,\n\treg = reg(25,21),\n\t{\n\t\t(SelA=10101, MR=0, MA=0, MB=11, SELCOP=01011, MC=1, T6, SelP=11, M7=1, C7, SelC=10101, MR=0, LC)\n    (A0=1, B=1, C=0)\n\t}\n}\n\n#NOT UPDATE SR\njp sigVal{\n\tco=110000,\n  nwords=1,\n\tsigVal = inm(15,0),\n\t{\n\t\t(SE=1, Size=10000, Offset=00000, T3, C5)\n    (T2, C4)\n  \t(MA=1, MB=01, SELCOP=01010, MC=1, T6, M2=0, C2)\n    (A0=1, B=1, C=0)\n\t}\n}\n\n\n#NOT UPDATE SR\njpz sigVal{\n\tco=110011,\n  nwords=1,\n\tsigVal = inm(15,0),\n\t{\n    (T2, C5)\n    (SE=1, Offset=00000, Size=10000, T3, C4, MADDR=fetch, B=0, A0=0, C=110)\n  \t(MA=1, MB=01, SelCop=1010, MC=1, C6)\n  \t(MA=1, MB=11, SelCop=1100, MC=1, SelP=11, M7=1, C7, T8, C4)\n  \t(MADDR=fetch, B=0, A0=0, C=110)\n  \t(T7, M2=0, C2, MA=1, MB=11, SelCop=1100, MC=1, SelP=11, M7=1, C7)\n    (A0=1, B=1, C=0)\n\t}\n}\n\n#NOT UPDATE SR\ncall unsigVal{\n\tco=100001,\n  nwords=1,\n\tunsigVal = inm(15,0),\n\t{\t\t\n    (SelA=11101 MR=1, MA=0, MB=10, SelCop=1011, MC=1, T6, C0, SelC=11101, LC)    \n  \t(T2, M1=0, C1)  \t\n  \t(Ta, BW=11, Td, W, SE=0, Size=10000, Offset=0, T3, M2=0,C2, SE=0, Size=10000, Offset=00000, T3)\n    (A0=1, B=1, C=0)\n\t}\n}\n\n#NOT UPDATE SR\nRet {\n\tco=100010,\n  nwords=1,\n\t{\n\t\t(SelA=11101, MR=1, T9, C0, MA=0, MB=10, SelCop=1010, MC=1, C6)\n    (Ta, R, BW=11, M1=1, C1, T7, SelC=11101, MR=1, LC)\n  \t(T1, M2=0, C2)\n    (A0=1, B=1, C=0)\n\t}\n}\n\n#NOT UPDATE SR\nHalt {\n\tco=100011,\n  nwords=1,\n\t{\n\t\t(MA=0, MB=00, SelCop=1010, MC=1, T6, M2=0, C2)\n    (A0=1, B=1, C=0)\n\t}\n}\n\n#NOT UPDATE SR\npush reg {\n\tco=100100,\n  nwords=1,\n\treg = reg(25,21),\n\t{\n\t\t(SelA=11101, MR=1, MA=0, MB=10, SelCop=1011, MC=1, T6, SelC=11101, MR=1, LC, C0)\n  \t(SelA=10101, MB=0, T9, M1=0, C1)\n  \t(Ta, BW=11, Td, W)  \n    (A0=1, B=1, C=0)\n\t}\n}\n\n#NOT UPDATE SR\npop reg {\n\tco=100101,\n  nwords=1,\n\treg = reg(25,21),\n\t{\n\t\t(SelA=11101, MR=1, T9, C0, MA=0, MB=10, SelCop=1010, MC, C6)\n    (Ta, R, BW=11, M1=1, C1, MR=1,SelC=11101, MR=1, T7, LC)\n  \t(SelC=10101, MR=0, T1, LC)\n    (A0=1, B=1, C=0)\n\t}\n}\n\n#####################################################################\n# \t\t\t\t\t\t\t\t\t\t Register section                             #\n#####################################################################\n#IX=$a0\n#IY=$a1\n#29=SP\n#Flag= bit Z of SR\n#HL=$v0 to return values\n#\nregisters\n{\n\t4 = A,\n\t5 = BC,\n\t6 = DE,\n\t7 = HL,\n\t8 = IX,\n\t9 = IY,\n  29 = SP (stack_pointer)\n}",
      "outputs": [],
      "execution_count": 1,
      "metadata": {
        "name": "firmware",
        "type": "string",
        "collapsed": false,
        "deletable": false,
        "editable": false
      }
    },
    {
      "cell_type": "markdown",
      "source": "## assembly",
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": ".data    \n\t\tvector: .word 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 \n.text\n\t\taddv: \n    \t##push $a0 and $a1\n      \t#------addi $sp $sp -8\n \t\t\t\t#------sw $a0 0($sp)\n        \tpush IX\n        #------sw $a1 4($sp)\n        \tpush IY\n      ##$v0 will contain the addition of the vector elements\n \t\t\t\t#------li $v0 0\n        \tldi HL 0\n \t\t\tb1:\n      \t#------beq $a0 $0 f1\n        \tld A IX\n          addi_a 0\n     jp0: jpz 4\n \t\t\t\t\tjp 44    \t\t\t\n \t\t\t\t#------lw $t0 ($a1)\n          ld BC (IY)\n \t\t\t\t#------add $v0 $v0 $t0\n        \tld A HL\n          add_a BC\n          ld HL A\n \t\t\t\t#------addi $a1 $a1 4\n        \tld A IY\n          addi_a 4\n          ld IY A\n \t\t\t\t#------addi $a0 $a0 -1\n        \tld A IX\n          addi_a -1\n          ld IX A\n \t\t\t\t#------b b1\n   \t\tjp1:  jp -56\n \t\t\t##pop $a1 and $a0\n \t\t\tf1:\n      \t#------lw $a0 0($sp)\n        \tpop IY\n \t\t\t\t#------lw $a1 4($sp)\n        \tpop IX\n \t\t\t\t#------addi $sp $sp 8\n \t\t\t##return\n \t\t\t\t#------jr $ra \n        \tRet\n \t\t\tmain: \n \t\t\t\t##call addv subroutine\n \t\t\t\t\t#------li $a0 10\n          \tldi IX 10\n \t\t\t\t\t#------la $a1 vector\n          \tldi IY 0x01000\n \t\t\t\t\t#------jal addv\n            call 0x08000\n \t\t\t\t# Finish the program\n \t\t\t\t\t#------li $v0 10\n \t\t\t\t\t#------syscall\n          \tHalt",
      "outputs": [],
      "execution_count": 1,
      "metadata": {
        "name": "assembly",
        "type": "string",
        "collapsed": false,
        "deletable": false,
        "editable": false
      }
    },
    {
      "cell_type": "markdown",
      "source": "## state_current",
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": "{\n  \"time\": 1575316319180,\n  \"title\": \"clock 1009 @ &#181;address 150\",\n  \"title_short\": \"clock 1009,<br>&#181;add 150\",\n  \"content\": \"register R5 = 0xa; register R7 = 0x37; register R8 = 0xa; register R9 = 0x1000; register R29 = 0xfffff; register SR = 0x10000000; memory 0x1000 = 0x1; memory 0x1004 = 0x2; memory 0x1008 = 0x3; memory 0x100c = 0x4; memory 0x1010 = 0x5; memory 0x1014 = 0x6; memory 0x1018 = 0x7; memory 0x101c = 0x8; memory 0x1020 = 0x9; memory 0x1024 = 0xa; memory 0x8000 = 0x91000000; memory 0x8004 = 0x91200000; memory 0x8008 = 0x48e00000; memory 0x800c = 0x40880000; memory 0x8010 = 0x68000000; memory 0x8014 = 0xcc000004; memory 0x8018 = 0xc000002c; memory 0x801c = 0x4ca90000; memory 0x8020 = 0x40870000; memory 0x8024 = 0x60a00000; memory 0x8028 = 0x40e40000; memory 0x802c = 0x40890000; memory 0x8030 = 0x68000004; memory 0x8034 = 0x41240000; memory 0x8038 = 0x40880000; memory 0x803c = 0x6800ffff; memory 0x8040 = 0x41040000; memory 0x8044 = 0xc000ffc8; memory 0x8048 = 0x95200000; memory 0x804c = 0x95000000; memory 0x8050 = 0x88000000; memory 0x8054 = 0x4900000a; memory 0x8058 = 0x49201000; memory 0x805c = 0x84008000; memory 0x8060 = 0x8c000000; memory 0xffff0 = 0x1000; memory 0xffff4 = 0xa; memory 0xffff8 = 0x8060; \"\n}",
      "outputs": [],
      "execution_count": 1,
      "metadata": {
        "name": "state_current",
        "type": "object",
        "collapsed": false,
        "deletable": false,
        "editable": false
      }
    },
    {
      "cell_type": "markdown",
      "source": "## state_history",
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": "[\n  {\n    \"time\": 1575315831334,\n    \"title\": \"clock 1009 @ &#181;address 150\",\n    \"title_short\": \"clock 1009,<br>&#181;add 150\",\n    \"content\": \"register R5 = 0xa; register R7 = 0x37; register R8 = 0xa; register R9 = 0x1000; register R29 = 0xfffff; register SR = 0x10000000; memory 0x1000 = 0x1; memory 0x1004 = 0x2; memory 0x1008 = 0x3; memory 0x100c = 0x4; memory 0x1010 = 0x5; memory 0x1014 = 0x6; memory 0x1018 = 0x7; memory 0x101c = 0x8; memory 0x1020 = 0x9; memory 0x1024 = 0xa; memory 0x8000 = 0x91000000; memory 0x8004 = 0x91200000; memory 0x8008 = 0x48e00000; memory 0x800c = 0x40880000; memory 0x8010 = 0x68000000; memory 0x8014 = 0xcc000004; memory 0x8018 = 0xc000002c; memory 0x801c = 0x4ca90000; memory 0x8020 = 0x40870000; memory 0x8024 = 0x60a00000; memory 0x8028 = 0x40e40000; memory 0x802c = 0x40890000; memory 0x8030 = 0x68000004; memory 0x8034 = 0x41240000; memory 0x8038 = 0x40880000; memory 0x803c = 0x6800ffff; memory 0x8040 = 0x41040000; memory 0x8044 = 0xc000ffc8; memory 0x8048 = 0x95200000; memory 0x804c = 0x95000000; memory 0x8050 = 0x88000000; memory 0x8054 = 0x4900000a; memory 0x8058 = 0x49201000; memory 0x805c = 0x84008000; memory 0x8060 = 0x8c000000; memory 0xffff0 = 0x1000; memory 0xffff4 = 0xa; memory 0xffff8 = 0x8060; \"\n  },\n  {\n    \"time\": 1575316082007,\n    \"title\": \"clock 13 @ &#181;address 0\",\n    \"title_short\": \"clock 13,<br>&#181;add 0\",\n    \"content\": \"register R8 = 0xa; register R9 = 0x1000; register R29 = 0xfffff; register PC = 0x805c; memory 0x1000 = 0x1; memory 0x1004 = 0x2; memory 0x1008 = 0x3; memory 0x100c = 0x4; memory 0x1010 = 0x5; memory 0x1014 = 0x6; memory 0x1018 = 0x7; memory 0x101c = 0x8; memory 0x1020 = 0x9; memory 0x1024 = 0xa; memory 0x8000 = 0x91000000; memory 0x8004 = 0x91200000; memory 0x8008 = 0x48e00000; memory 0x800c = 0x40880000; memory 0x8010 = 0x68000000; memory 0x8014 = 0xcc000004; memory 0x8018 = 0xc000002c; memory 0x801c = 0x4ca90000; memory 0x8020 = 0x40870000; memory 0x8024 = 0x60a00000; memory 0x8028 = 0x40e40000; memory 0x802c = 0x40890000; memory 0x8030 = 0x68000004; memory 0x8034 = 0x41240000; memory 0x8038 = 0x40880000; memory 0x803c = 0x6800ffff; memory 0x8040 = 0x41040000; memory 0x8044 = 0xc000ffc8; memory 0x8048 = 0x95200000; memory 0x804c = 0x95000000; memory 0x8050 = 0x88000000; memory 0x8054 = 0x4900000a; memory 0x8058 = 0x49201000; memory 0x805c = 0x84008000; memory 0x8060 = 0x8c000000; \"\n  },\n  {\n    \"time\": 1575316098820,\n    \"title\": \"clock 1004 @ &#181;address 0\",\n    \"title_short\": \"clock 1004,<br>&#181;add 0\",\n    \"content\": \"register R5 = 0xa; register R7 = 0x37; register R8 = 0xa; register R9 = 0x1000; register R29 = 0xfffff; register PC = 0x8060; register SR = 0x10000000; memory 0x1000 = 0x1; memory 0x1004 = 0x2; memory 0x1008 = 0x3; memory 0x100c = 0x4; memory 0x1010 = 0x5; memory 0x1014 = 0x6; memory 0x1018 = 0x7; memory 0x101c = 0x8; memory 0x1020 = 0x9; memory 0x1024 = 0xa; memory 0x8000 = 0x91000000; memory 0x8004 = 0x91200000; memory 0x8008 = 0x48e00000; memory 0x800c = 0x40880000; memory 0x8010 = 0x68000000; memory 0x8014 = 0xcc000004; memory 0x8018 = 0xc000002c; memory 0x801c = 0x4ca90000; memory 0x8020 = 0x40870000; memory 0x8024 = 0x60a00000; memory 0x8028 = 0x40e40000; memory 0x802c = 0x40890000; memory 0x8030 = 0x68000004; memory 0x8034 = 0x41240000; memory 0x8038 = 0x40880000; memory 0x803c = 0x6800ffff; memory 0x8040 = 0x41040000; memory 0x8044 = 0xc000ffc8; memory 0x8048 = 0x95200000; memory 0x804c = 0x95000000; memory 0x8050 = 0x88000000; memory 0x8054 = 0x4900000a; memory 0x8058 = 0x49201000; memory 0x805c = 0x84008000; memory 0x8060 = 0x8c000000; memory 0xffff0 = 0x1000; memory 0xffff4 = 0xa; memory 0xffff8 = 0x8060; \"\n  },\n  {\n    \"time\": 1575316137170,\n    \"title\": \"clock 1009 @ &#181;address 150\",\n    \"title_short\": \"clock 1009,<br>&#181;add 150\",\n    \"content\": \"register R5 = 0xa; register R7 = 0x37; register R8 = 0xa; register R9 = 0x1000; register R29 = 0xfffff; register SR = 0x10000000; memory 0x1000 = 0x1; memory 0x1004 = 0x2; memory 0x1008 = 0x3; memory 0x100c = 0x4; memory 0x1010 = 0x5; memory 0x1014 = 0x6; memory 0x1018 = 0x7; memory 0x101c = 0x8; memory 0x1020 = 0x9; memory 0x1024 = 0xa; memory 0x8000 = 0x91000000; memory 0x8004 = 0x91200000; memory 0x8008 = 0x48e00000; memory 0x800c = 0x40880000; memory 0x8010 = 0x68000000; memory 0x8014 = 0xcc000004; memory 0x8018 = 0xc000002c; memory 0x801c = 0x4ca90000; memory 0x8020 = 0x40870000; memory 0x8024 = 0x60a00000; memory 0x8028 = 0x40e40000; memory 0x802c = 0x40890000; memory 0x8030 = 0x68000004; memory 0x8034 = 0x41240000; memory 0x8038 = 0x40880000; memory 0x803c = 0x6800ffff; memory 0x8040 = 0x41040000; memory 0x8044 = 0xc000ffc8; memory 0x8048 = 0x95200000; memory 0x804c = 0x95000000; memory 0x8050 = 0x88000000; memory 0x8054 = 0x4900000a; memory 0x8058 = 0x49201000; memory 0x805c = 0x84008000; memory 0x8060 = 0x8c000000; memory 0xffff0 = 0x1000; memory 0xffff4 = 0xa; memory 0xffff8 = 0x8060; \"\n  }\n]",
      "outputs": [],
      "execution_count": 1,
      "metadata": {
        "name": "state_history",
        "type": "object",
        "collapsed": false,
        "deletable": false,
        "editable": false
      }
    },
    {
      "cell_type": "markdown",
      "source": "## record",
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": "[\n  {\n    \"timestamp\": 7038,\n    \"description\": \"Set assembly breakpoint at 32860\",\n    \"element\": \"asmdbg_set_breakpoint(32860);\\n\"\n  },\n  {\n    \"timestamp\": 954,\n    \"description\": \"Set assembly breakpoint at 32864\",\n    \"element\": \"asmdbg_set_breakpoint(32864);\\n\"\n  },\n  {\n    \"timestamp\": 2347,\n    \"description\": \"Run\",\n    \"element\": \"wsweb_execution_run();\\n\"\n  },\n  {\n    \"timestamp\": 0,\n    \"description\": \"Click on UI element btn_run_stop\",\n    \"element\": \"simcore_record_glowing(\\\"#btn_run_stop\\\");\\n\"\n  },\n  {\n    \"timestamp\": 3584,\n    \"description\": \"Close execution summary\",\n    \"element\": \"wsweb_dialogbox_close_all();\\n\"\n  },\n  {\n    \"timestamp\": 940,\n    \"description\": \"Open state\",\n    \"element\": \"wsweb_dialogbox_open_state();\\n\"\n  },\n  {\n    \"timestamp\": 160,\n    \"description\": \"Close all notifications\",\n    \"element\": \"wepsim_notify_close();\\n\"\n  },\n  {\n    \"timestamp\": 6753,\n    \"description\": \"Close all notifications\",\n    \"element\": \"wepsim_notify_close();\\n\"\n  },\n  {\n    \"timestamp\": 3514,\n    \"description\": \"Close state\",\n    \"element\": \"wsweb_dialogbox_close_all();\\n\"\n  },\n  {\n    \"timestamp\": 0,\n    \"description\": \"Close states dialogbox\",\n    \"element\": \"wsweb_dialogbox_close_state();\\n\"\n  },\n  {\n    \"timestamp\": 2008,\n    \"description\": \"Run\",\n    \"element\": \"wsweb_execution_run();\\n\"\n  },\n  {\n    \"timestamp\": 0,\n    \"description\": \"Click on UI element btn_run_stop\",\n    \"element\": \"simcore_record_glowing(\\\"#btn_run_stop\\\");\\n\"\n  },\n  {\n    \"timestamp\": 3669,\n    \"description\": \"Close execution summary\",\n    \"element\": \"wsweb_dialogbox_close_all();\\n\"\n  },\n  {\n    \"timestamp\": 1340,\n    \"description\": \"Open state\",\n    \"element\": \"wsweb_dialogbox_open_state();\\n\"\n  },\n  {\n    \"timestamp\": 170,\n    \"description\": \"Close all notifications\",\n    \"element\": \"wepsim_notify_close();\\n\"\n  },\n  {\n    \"timestamp\": 6131,\n    \"description\": \"Close all notifications\",\n    \"element\": \"wepsim_notify_close();\\n\"\n  },\n  {\n    \"timestamp\": 26234,\n    \"description\": \"Close state\",\n    \"element\": \"wsweb_dialogbox_close_all();\\n\"\n  },\n  {\n    \"timestamp\": 1,\n    \"description\": \"Close states dialogbox\",\n    \"element\": \"wsweb_dialogbox_close_state();\\n\"\n  },\n  {\n    \"timestamp\": 1447,\n    \"description\": \"Run\",\n    \"element\": \"wsweb_execution_run();\\n\"\n  },\n  {\n    \"timestamp\": 0,\n    \"description\": \"Click on UI element btn_run_stop\",\n    \"element\": \"simcore_record_glowing(\\\"#btn_run_stop\\\");\\n\"\n  },\n  {\n    \"timestamp\": 1641,\n    \"description\": \"Close execution summary\",\n    \"element\": \"wsweb_dialogbox_close_all();\\n\"\n  },\n  {\n    \"timestamp\": 3764,\n    \"description\": \"Open state\",\n    \"element\": \"wsweb_dialogbox_open_state();\\n\"\n  },\n  {\n    \"timestamp\": 204,\n    \"description\": \"Close all notifications\",\n    \"element\": \"wepsim_notify_close();\\n\"\n  },\n  {\n    \"timestamp\": 5044,\n    \"description\": \"Close all notifications\",\n    \"element\": \"wepsim_notify_close();\\n\"\n  },\n  {\n    \"timestamp\": 11501,\n    \"description\": \"Close state\",\n    \"element\": \"wsweb_dialogbox_close_all();\\n\"\n  },\n  {\n    \"timestamp\": 1,\n    \"description\": \"Close states dialogbox\",\n    \"element\": \"wsweb_dialogbox_close_state();\\n\"\n  },\n  {\n    \"timestamp\": 500,\n    \"description\": \"Show message with title \\\"<span class='inline-block text-truncate w-25'>Cheking performed :=)</span>\\\" and body \\\"<span class='inline-block text-truncate w-25'>We have realiced that HL, BC, SP and PC are updated as desired. On the other hand SR register is not updated. \\nFuthermore, push and pop instructions are working as expected.</span>\\\".\",\n    \"element\": \"wsweb_notifyuser_show(\\\"Cheking performed :=)\\\", \\\"We have realiced that HL, BC, SP and PC are updated as desired. On the other hand SR register is not updated. </br>Futhermore, push and pop instructions are working as expected.\\\", \\\"20000\\\");\\n\"\n  },\n  {\n    \"timestamp\": 20000,\n    \"description\": \"Close message with title \\\"<span class='inline-block text-truncate w-25'>Cheking performed :=)</span>\\\".\",\n    \"element\": \"wsweb_notifyuser_hide();\\n\"\n  }\n]",
      "outputs": [],
      "execution_count": 1,
      "metadata": {
        "name": "record",
        "type": "object",
        "collapsed": false,
        "deletable": false,
        "editable": false
      }
    },
    {
      "cell_type": "markdown",
      "source": "## tag",
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": "",
      "outputs": [],
      "execution_count": 1,
      "metadata": {
        "name": "tag",
        "type": "string",
        "collapsed": false,
        "deletable": false,
        "editable": false
      }
    },
    {
      "cell_type": "markdown",
      "source": "## notify",
      "metadata": {}
    },
    {
      "cell_type": "code",
      "source": "true",
      "outputs": [],
      "execution_count": 1,
      "metadata": {
        "name": "notify",
        "type": "boolean",
        "collapsed": false,
        "deletable": false,
        "editable": false
      }
    }
  ]
}